---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Probabilidad - Proyecto">
  <main>
    <h1>Proyecto de Probabilidad <a href="/" class="text-gradient">Dados</a></h1>
    <p class="instructions">
      Ingresa un número del 2 al 12 y la cantidad de veces que deseas lanzar los dados para calcular la probabilidad de obtener esa suma.
    </p>
    
    <div class="dice-probability">
      <label for="targetNumber">Número objetivo (2-12):</label>
      <input type="number" id="targetNumber" min="2" max="12" value="2" />
      
      <label for="numLanzamientos">Número de lanzamientos:</label>
      <input type="number" id="numLanzamientos" min="1" value="1" />
      
      <button id="calcularProbabilidadBtn"
      type="button"
      class="bg-gradient-to-r from-teal-200 to-lime-200 hover:bg-gradient-to-l hover:from-teal-200 hover:to-lime-200 focus:ring-4 focus:outline-none focus:ring-lime-200 dark:focus:ring-teal-700 font-extrabold rounded-lg text-lg px-6 py-3 text-center me-2 mb-2"
      style="color: #000000;">
      Calcular Probabilidad
    </button>
      
      
      <div id="resultadoProbabilidad"></div>
      
      <div id="dados-container">
        <img src="/src/assets/dado1.png" alt="Dado 1" class="dado" id="dado1" />
        <img src="/src/assets/dado1.png" alt="Dado 2" class="dado" id="dado2" />
      </div>
    </div>
  </main>
</Layout>

<script>
  if (typeof window !== 'undefined') {
    document.addEventListener('DOMContentLoaded', () => {
      const calcularProbabilidadBtn = document.getElementById('calcularProbabilidadBtn') as HTMLButtonElement;
      const targetNumberInput = document.getElementById('targetNumber') as HTMLInputElement;
      const numLanzamientosInput = document.getElementById('numLanzamientos') as HTMLInputElement;
      const resultadoProbabilidadDiv = document.getElementById('resultadoProbabilidad') as HTMLDivElement;
      const dado1 = document.getElementById('dado1') as HTMLImageElement;
      const dado2 = document.getElementById('dado2') as HTMLImageElement;

      calcularProbabilidadBtn.addEventListener('click', () => {
        const targetNumber = parseInt(targetNumberInput.value, 10);
        const numLanzamientos = parseInt(numLanzamientosInput.value, 10);

        if (isNaN(targetNumber) || isNaN(numLanzamientos) || targetNumber < 2 || targetNumber > 12 || numLanzamientos <= 0) {
          resultadoProbabilidadDiv.innerHTML = `<p>Por favor ingresa valores válidos.</p>`;
          dado1.src = '/src/assets/dado1.png';
          dado2.src = '/src/assets/dado1.png'; 
          return;
        }

        const probabilidadIndividual = calcularProbabilidad(targetNumber);
        const probabilidadNoSuma = Math.pow(1 - probabilidadIndividual, numLanzamientos);
        const probabilidadFinal = (1 - probabilidadNoSuma) * 100;
        const combinaciones = obtenerCombinaciones(targetNumber);

        resultadoProbabilidadDiv.innerHTML = `
          <p>La probabilidad de que la suma sea ${targetNumber} al menos una vez en ${numLanzamientos} lanzamientos es del ${probabilidadFinal.toFixed(2)}%.</p>
          <div>${combinaciones.map(combinacion => `

          `).join('')}</div>
        `;

        if (combinaciones.length > 0) {
          dado1.src = `/src/assets/dado${combinaciones[0][0]}.png`;
          dado2.src = `/src/assets/dado${combinaciones[0][1]}.png`;
        }
      });

      function calcularProbabilidad(targetNumber: number): number {
        const posiblesCombinaciones: [number, number][] = [
          [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6],
          [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6],
          [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6],
          [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6],
          [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6],
          [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6]
        ];

        const favorableCombinations = posiblesCombinaciones.filter(combinacion => combinacion[0] + combinacion[1] === targetNumber);
        return favorableCombinations.length / posiblesCombinaciones.length;
      }

      function obtenerCombinaciones(targetNumber: number): [number, number][] {
        const posiblesCombinaciones: [number, number][] = [
          [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6],
          [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6],
          [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6],
          [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6],
          [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6],
          [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6]
        ];

        return posiblesCombinaciones.filter(combinacion => combinacion[0] + combinacion[1] === targetNumber);
      }
    });
  }
</script>


<style>
  main {
    margin: auto;
    padding: 1rem 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }

  h1 {
    font-size: 3.5rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
    margin-top: 1em;
  }

  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }

  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
    padding: 1.5rem;
    border-radius: 8px;
  }

  .dice-probability {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: center;
  }

  input {
    padding: 0.5rem;
    font-size: 1rem;
    color: black;
    background-color: white;
    border: 1px solid #0070f3;
    border-radius: 4px;
  }

  button {
    padding: 0.5rem 1rem;
    background-color: #0070f3;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  button:hover {
    background-color: #005bb5;
  }

  #resultadoProbabilidad {
    margin-top: 1rem;
    font-size: 1.2rem;
    color: white;
  }

  #dados-container {
    display: flex;
    justify-content: space-between;
    width: 200px;
    margin-top: 1rem;
  }

  .dado {
    width: 80px;
    height: 80px;
  }
</style>
