---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
---

<Layout title="Probabilidad - Proyecto">
	<main>
		<h1 transition:persist="fade">Proyecto de Probabilidad <a href="/" class="text-gradient">Monedas</a></h1>
		<ul role="list" class="link-card-grid"></ul>
<div class="coin-flip">
<label for="numLanzamientos">Número de lanzamientos:</label>
<input type="number" id="numLanzamientos" min="1" value="1" />
<button id="lanzarMonedaBtn">Lanzar Moneda</button>
<div class="coin" id="coin"></div>
		  
<div id="resultado"></div>
</div>
			
	</main>
</Layout>



<script>
  if (typeof window !== 'undefined') {
    document.addEventListener('DOMContentLoaded', () => {
      const lanzarMonedaBtn = document.getElementById('lanzarMonedaBtn');
      const numLanzamientosInput = document.getElementById('numLanzamientos');
      const resultadoDiv = document.getElementById('resultado');

      if (!lanzarMonedaBtn || !numLanzamientosInput || !resultadoDiv) {
        console.error('Uno de los elementos necesarios no está disponible.');
        return;
      }

      lanzarMonedaBtn.addEventListener('click', () => {
        const numLanzamientos = parseInt(numLanzamientosInput.value, 10);

       
        if (isNaN(numLanzamientos) || numLanzamientos <= 0) {
          resultadoDiv.innerHTML = `<p>Por favor ingresa un número válido de lanzamientos.</p>`;
          return;
        }

        let caras = 0, cruces = 0;

        for (let i = 0; i < numLanzamientos; i++) {
          const result = Math.random() < 0.5 ? 'Cara' : 'Cruz';
          if (result === 'Cara') caras++;
          else cruces++;
        }

        const probabilidadCara = (caras / numLanzamientos) * 100;
        const probabilidadCruz = (cruces / numLanzamientos) * 100;

        resultadoDiv.innerHTML = `
          <p>Caras: ${caras} (${probabilidadCara.toFixed(2)}%)</p>
          <p>Cruces: ${cruces} (${probabilidadCruz.toFixed(2)}%)</p>
        `;
      });
    });
  }
</script>





<style>
	main {
		margin: auto;
		padding: 1rem 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 5rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
		margin-top: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(16ch, 1fr));
		gap: 2rem;
		padding: 0;
		padding-bottom: 5rem;
	}

	.coin-flip {
    text-align: center;
    margin: 2rem 0;
	color: white;
  }

  #resultado p {
    margin: 0.5rem 0;
  }

  input {
  margin: 0 1rem;
  padding: 0.5rem;
  font-size: 1rem;
  background-color: #ffffff; 
  color: rgb(0, 0, 0); 
  border: 1px solid #0070f3;
  border-radius: 4px; 
}

  button {
    padding: 0.5rem 1rem;
    background-color: #0070f3;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  button:hover {
    background-color: #005bb5;
  }

  
</style>
